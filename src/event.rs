// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use crate::Accessible;
use atspi_sys;
use glib::translate::*;
use gobject_sys;

glib_wrapper! {
    #[derive(Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]
    pub struct Event(Boxed<atspi_sys::AtspiEvent>);

    match fn {
        copy => |ptr| gobject_sys::g_boxed_copy(atspi_sys::atspi_event_get_type(), ptr as *mut _) as *mut atspi_sys::AtspiEvent,
        free => |ptr| gobject_sys::g_boxed_free(atspi_sys::atspi_event_get_type(), ptr as *mut _),
        get_type => || atspi_sys::atspi_event_get_type(),
    }
}

impl Event {
    pub fn main() {
        assert_initialized_main_thread!();
        unsafe {
            atspi_sys::atspi_event_main();
        }
    }

    pub fn quit() {
        assert_initialized_main_thread!();
        unsafe {
            atspi_sys::atspi_event_quit();
        }
    }

    // FIXME This is likely incorrect 
    pub fn get_source(&self) -> Option<Accessible> {
        unsafe { Some(from_glib_full((&self.0).source)) }
    }
    pub fn get_detail1(&self) -> i32 {
        self.0.detail1
    }
    pub fn get_detail2(&self) -> i32 {
        self.0.detail2
    }
    /// In the event struct 'sender' is a v2.34> feature.
    /// Accessibility client programs may want to discern between the cause of events.
    /// Did the client itself cause the event or was this an externally caused event?
    /// While 'source' points to the Accessible that sent the Event,
    ///
    /// 'sender' will point to 'source' event, unless the event is invoked
    /// by the accessibility client. Then sender will point to the a11y
    /// client.
    /// 
    
    // FIXME This is likely incorrect 
    pub fn get_sender(&self) -> Option<Accessible> {
        unsafe { Some(from_glib_full((&self.0).sender)) }
    }
}
